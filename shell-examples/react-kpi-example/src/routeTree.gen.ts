/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const IndexLazyRouteImport = createFileRoute('/')()
const TimetableIndexLazyRouteImport = createFileRoute('/timetable/')()
const CalendarIndexLazyRouteImport = createFileRoute('/calendar/')()
const TimetableQ4LazyRouteImport = createFileRoute('/timetable/q4')()
const TimetableQ3LazyRouteImport = createFileRoute('/timetable/q3')()
const TimetableQ2LazyRouteImport = createFileRoute('/timetable/q2')()
const TimetableQ1LazyRouteImport = createFileRoute('/timetable/q1')()

const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const TimetableIndexLazyRoute = TimetableIndexLazyRouteImport.update({
  id: '/timetable/',
  path: '/timetable/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/timetable/index.lazy').then((d) => d.Route),
)
const CalendarIndexLazyRoute = CalendarIndexLazyRouteImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/calendar/index.lazy').then((d) => d.Route),
)
const TimetableQ4LazyRoute = TimetableQ4LazyRouteImport.update({
  id: '/timetable/q4',
  path: '/timetable/q4',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/timetable/q4.lazy').then((d) => d.Route))
const TimetableQ3LazyRoute = TimetableQ3LazyRouteImport.update({
  id: '/timetable/q3',
  path: '/timetable/q3',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/timetable/q3.lazy').then((d) => d.Route))
const TimetableQ2LazyRoute = TimetableQ2LazyRouteImport.update({
  id: '/timetable/q2',
  path: '/timetable/q2',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/timetable/q2.lazy').then((d) => d.Route))
const TimetableQ1LazyRoute = TimetableQ1LazyRouteImport.update({
  id: '/timetable/q1',
  path: '/timetable/q1',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/timetable/q1.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/timetable/q1': typeof TimetableQ1LazyRoute
  '/timetable/q2': typeof TimetableQ2LazyRoute
  '/timetable/q3': typeof TimetableQ3LazyRoute
  '/timetable/q4': typeof TimetableQ4LazyRoute
  '/calendar': typeof CalendarIndexLazyRoute
  '/timetable': typeof TimetableIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/timetable/q1': typeof TimetableQ1LazyRoute
  '/timetable/q2': typeof TimetableQ2LazyRoute
  '/timetable/q3': typeof TimetableQ3LazyRoute
  '/timetable/q4': typeof TimetableQ4LazyRoute
  '/calendar': typeof CalendarIndexLazyRoute
  '/timetable': typeof TimetableIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/timetable/q1': typeof TimetableQ1LazyRoute
  '/timetable/q2': typeof TimetableQ2LazyRoute
  '/timetable/q3': typeof TimetableQ3LazyRoute
  '/timetable/q4': typeof TimetableQ4LazyRoute
  '/calendar/': typeof CalendarIndexLazyRoute
  '/timetable/': typeof TimetableIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/timetable/q1'
    | '/timetable/q2'
    | '/timetable/q3'
    | '/timetable/q4'
    | '/calendar'
    | '/timetable'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/timetable/q1'
    | '/timetable/q2'
    | '/timetable/q3'
    | '/timetable/q4'
    | '/calendar'
    | '/timetable'
  id:
    | '__root__'
    | '/'
    | '/timetable/q1'
    | '/timetable/q2'
    | '/timetable/q3'
    | '/timetable/q4'
    | '/calendar/'
    | '/timetable/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  TimetableQ1LazyRoute: typeof TimetableQ1LazyRoute
  TimetableQ2LazyRoute: typeof TimetableQ2LazyRoute
  TimetableQ3LazyRoute: typeof TimetableQ3LazyRoute
  TimetableQ4LazyRoute: typeof TimetableQ4LazyRoute
  CalendarIndexLazyRoute: typeof CalendarIndexLazyRoute
  TimetableIndexLazyRoute: typeof TimetableIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/': {
      id: '/timetable/'
      path: '/timetable'
      fullPath: '/timetable'
      preLoaderRoute: typeof TimetableIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/q4': {
      id: '/timetable/q4'
      path: '/timetable/q4'
      fullPath: '/timetable/q4'
      preLoaderRoute: typeof TimetableQ4LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/q3': {
      id: '/timetable/q3'
      path: '/timetable/q3'
      fullPath: '/timetable/q3'
      preLoaderRoute: typeof TimetableQ3LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/q2': {
      id: '/timetable/q2'
      path: '/timetable/q2'
      fullPath: '/timetable/q2'
      preLoaderRoute: typeof TimetableQ2LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/timetable/q1': {
      id: '/timetable/q1'
      path: '/timetable/q1'
      fullPath: '/timetable/q1'
      preLoaderRoute: typeof TimetableQ1LazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  TimetableQ1LazyRoute: TimetableQ1LazyRoute,
  TimetableQ2LazyRoute: TimetableQ2LazyRoute,
  TimetableQ3LazyRoute: TimetableQ3LazyRoute,
  TimetableQ4LazyRoute: TimetableQ4LazyRoute,
  CalendarIndexLazyRoute: CalendarIndexLazyRoute,
  TimetableIndexLazyRoute: TimetableIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
